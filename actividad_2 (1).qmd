---
title: "PC1_2,qmd"
author: "Rodrigo Godoy"
format: html
editor: visual
---

**Integrantes:**

Chavez Córdova, Lennin Nilton

Godoy Barrera, Rodrigo José

Laura Ravichagua, Joseph Antonio

Serran Mendoza, Franco Daniel

Tenorio Flores, Diego Alessandro

## Analisis de datos en Rstudio

## Resumen

El presente trabajo tiene como objetivo documentar de forma clara y ordenada el procedimiento de importación, limpieza y transformación de un dataset en RStudio utilizando el lenguaje de programación R y el entorno Quarto. Este proceso es fundamental para preparar los datos de manera adecuada antes de cualquier análisis estadístico o modelado. A través del uso de funciones del paquete tidyverse y janitor, se realiza la estandarización de nombres, conversión de variables y creación de nuevas columnas útiles para el análisis.

## Desarrollo

## impostacion de dataset

Primero cargamos las librerías necesarias y leemos los datos.

### Importación del Dataset

```{r}
install.packages("readxl")
```

```{r}
utils::contrib.url(repos, "source")
```

```{r}
install.packages("pillar", dependencies = TRUE)
```

```{r}
library(readxl)

```

```{r}
file.choose()
```

```{r}
data <- read_excel("C:\\Users\\User\\Downloads\\bajo_peso.xlsx")
data
```

##Limpieza de Datos

\### 1. Limpieza de nombres de columnas

Primero vamos a estandarizar los nombres de las columnas para facilitar su uso en el análisis.

```{r}
install.packages("janitor")
```

```{r}
library(tidyverse)
library(janitor)
```

```{r}
# Visualización de nombres limpios
names(data)
```

## Transformación de Datos

### 2. Conversión de variables categóricas

Ahora se va a convertir las variables de tipo texto a factores para su posterior análisis estadístico

```{r}
data <- data %>%
  mutate(across(c(bajo_peso, raza, fuma, hipertension, irritabilidad_utero), as.factor))

data
```

## Nueva variable: Índice de peso madre por edad

Esta variable nos ayudara a analizar si existe alguna relación entre el peso de la madre y su edad.

```{r}
data <- data %>%
  mutate(peso_edad_indice = peso_madre / edad_madre)

data
```

## Agrupación de visitas médicas

Ahora vamos a crear categorías a partir de la cantidad de visitas médicas.

```{r}
data <- data %>%
  mutate(visitas_cat = case_when(
    visitas_medicas == 0 ~ "Ninguna",
    visitas_medicas <= 2 ~ "Pocas",
    visitas_medicas > 2 ~ "Varias"
  ))

data
```

## Exportación del Dataset Limpio

Finalmente, lo que vamos hacer es guarda el nuevo dataset transformado como un archivo CSV.

```{r}
write_csv(data, "data_limpia.csv")
```

## Conclusiones

A través de este informe lo que podemos concluir es que se consolidaron habilidades básicas para el manejo de datos en RStudio, incluyendo limpieza y transformación. Estas etapas nos permiten contar con una base de datos adecuada para el análisis, aumentando la calidad y precisión de los resultados.
